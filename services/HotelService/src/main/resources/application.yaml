server:
  port: 8081 
 
spring:                 
  application:
    name: hotel-service
  datasource:
    url: jdbc:mysql://localhost:3308/hotel_service?createDatabaseIfNotExist=true
    username: root
    password: 123456
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8180/realms/hotel

  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: hotel-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        
springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /v3/api-docs
  show-actuator: true

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka
management:
  endpoints:
    web:
      exposure:
        include: "*"
  logs:
    level:
      org.springframework.web: INFO
  tracing:
    enabled: true
    sampling:
      probability: 1.0

cloudinary:
  url: cloudinary://384567153543315:54BO4msJ06zCcivaIthZHvUnIuI@drsmkfjfo